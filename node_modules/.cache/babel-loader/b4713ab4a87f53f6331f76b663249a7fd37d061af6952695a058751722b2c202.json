{"ast":null,"code":"var _jsxFileName = \"/Users/ericbennett/Desktop/ericlet/mandarin_trainer/src/components/Menu.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Stack, Card, Form, Button, ButtonGroup, ToggleButton } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Menu(props) {\n  _s();\n  const [given, setGiven] = useState(\"\");\n  const [want, setWant] = useState(\"\");\n  const answerTypes = [{\n    name: \"Pinyin\",\n    value: \"pinyin\"\n  }, {\n    name: \"Character\",\n    value: \"character\"\n  }, {\n    name: \"Definition\",\n    value: \"definition\"\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    body: true,\n    style: {\n      width: \"400px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n      children: \"Mandarin Trainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        gap: 3,\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n            \"aria-label\": \"WordSet\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Word Set\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"Long Name of the Book 2-1 Chapter 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"Two\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"Three\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Review Set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"horizontal\",\n          gap: 3,\n          style: {\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"Given\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              vertical: true,\n              children: answerTypes.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n                id: `given-${idx}`,\n                type: \"radio\",\n                name: \"given\",\n                value: radio.value,\n                checked: given === radio.value,\n                onChange: e => setGiven(e.currentTarget.value),\n                children: radio.name\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"Test for\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              vertical: true,\n              children: answerTypes.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n                id: `want-${idx}`,\n                type: \"radio\",\n                name: \"want\",\n                value: radio.value,\n                checked: want === radio.value,\n                onChange: e => setWant(e.currentTarget.value),\n                children: radio.name\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          children: \"GO!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(Menu, \"24w299Pd4tM+QP9Z/R+fKSczoSY=\");\n_c = Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["useState","useEffect","Stack","Card","Form","Button","ButtonGroup","ToggleButton","jsxDEV","_jsxDEV","Menu","props","_s","given","setGiven","want","setWant","answerTypes","name","value","body","style","width","children","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","gap","Select","direction","justifyContent","alignItems","textAlign","vertical","map","radio","idx","id","type","checked","onChange","e","currentTarget","variant","_c","$RefreshReg$"],"sources":["/Users/ericbennett/Desktop/ericlet/mandarin_trainer/src/components/Menu.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { Stack, Card, Form, Button, ButtonGroup, ToggleButton } from 'react-bootstrap'\n\nexport default function Menu(props) {\n\n    const [given, setGiven] = useState(\"\")\n    const [want, setWant] = useState(\"\")\n\n    const answerTypes = [\n        {\n            name: \"Pinyin\",\n            value: \"pinyin\"\n        },\n        {\n            name: \"Character\",\n            value: \"character\",\n        },\n        {\n            name: \"Definition\",\n            value: \"definition\"\n        }\n    ]\n\n    return (\n        <Card body style={{ width: \"400px\" }}>\n            <Card.Title>\n                Mandarin Trainer\n            </Card.Title>\n            <Card.Body>\n                <Stack gap={3}>\n\n                    <Stack gap={1}>\n                        <Form.Select aria-label=\"WordSet\">\n                            <option>Word Set</option>\n                            <option value=\"1\">Long Name of the Book 2-1 Chapter 3</option>\n                            <option value=\"2\">Two</option>\n                            <option value=\"3\">Three</option>\n                        </Form.Select>\n                        <Button>\n                            Review Set\n                        </Button>\n                    </Stack>\n\n                    <Stack direction=\"horizontal\" gap={3} style={{ justifyContent: \"space-between\", alignItems: \"center\" }}>\n\n                        <Stack>\n                            <h6 style={{ textAlign: \"center\" }}>Given</h6>\n                            <ButtonGroup vertical>\n                                {answerTypes.map((radio, idx) => (\n                                    <ToggleButton\n                                        key={idx}\n                                        id={`given-${idx}`}\n                                        type=\"radio\"\n                                        name=\"given\"\n                                        value={radio.value}\n                                        checked={given === radio.value}\n                                        onChange={(e) => setGiven(e.currentTarget.value)}\n                                    >\n                                        {radio.name}\n                                    </ToggleButton>\n                                ))}\n                            </ButtonGroup>\n                        </Stack>\n\n                        <Stack>\n                            <h6 style={{ textAlign: \"center\" }}>Test for</h6>\n                            <ButtonGroup vertical>\n                                {answerTypes.map((radio, idx) => (\n                                    <ToggleButton\n                                        key={idx}\n                                        id={`want-${idx}`}\n                                        type=\"radio\"\n                                        name=\"want\"\n                                        value={radio.value}\n                                        checked={want === radio.value}\n                                        onChange={(e) => setWant(e.currentTarget.value)}\n                                    >\n                                        {radio.name}\n                                    </ToggleButton>\n                                ))}\n                            </ButtonGroup>\n                        </Stack>\n\n                    </Stack>\n\n                    <Button variant=\"success\">\n                        GO!\n                    </Button>\n\n                </Stack>\n            </Card.Body>\n        </Card>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}