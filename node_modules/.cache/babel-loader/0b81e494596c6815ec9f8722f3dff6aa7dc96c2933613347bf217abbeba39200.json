{"ast":null,"code":"var _jsxFileName = \"/Users/ericbennett/Desktop/ericlet/ericletapp/ericlet/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Alert, Card, Stack, Dropdown, Form, Button, ButtonGroup, ToggleButton } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [given, setGiven] = useState(\"\");\n  const [want, setWant] = useState(\"\");\n  const answerTypes = [{\n    name: \"Pinyin\",\n    value: \"pinyin\"\n  }, {\n    name: \"Character\",\n    value: \"character\"\n  }, {\n    name: \"Definition\",\n    value: \"definition\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        body: true,\n        style: {\n          width: \"400px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Mandarin Trainer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            gap: 3,\n            children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n              \"aria-label\": \"WordSet\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Word Set\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"Long Name of the Book 2-1 Chapter 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"Two\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"Three\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              children: \"Review Set\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"horizontal\",\n              gap: 3,\n              style: {\n                justifyContent: \"space-between\",\n                alignItems: \"center\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Stack, {\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  children: \"Given\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                  vertical: true,\n                  children: answerTypes.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n                    id: `radio-${idx}`,\n                    type: \"radio\",\n                    name: \"radio\",\n                    value: radio.value,\n                    checked: given === radio.value,\n                    onChange: e => setGiven(e.currentTarget.value),\n                    children: radio.name\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  children: \"Test for\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                  vertical: true,\n                  children: answerTypes.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n                    id: `radio-${idx}`,\n                    type: \"radio\",\n                    name: \"radio\",\n                    value: radio.value,\n                    checked: want === radio.value,\n                    onChange: e => setWant(e.currentTarget.value),\n                    children: radio.name\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"24w299Pd4tM+QP9Z/R+fKSczoSY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Alert","Card","Stack","Dropdown","Form","Button","ButtonGroup","ToggleButton","jsxDEV","_jsxDEV","App","_s","given","setGiven","want","setWant","answerTypes","name","value","style","width","height","children","justifyContent","alignItems","body","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","gap","Select","direction","textAlign","vertical","map","radio","idx","id","type","checked","onChange","e","currentTarget","_c","$RefreshReg$"],"sources":["/Users/ericbennett/Desktop/ericlet/ericletapp/ericlet/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { Alert, Card, Stack, Dropdown, Form, Button, ButtonGroup, ToggleButton } from 'react-bootstrap'\n\nfunction App() {\n\n  const [given, setGiven] = useState(\"\")\n  const [want, setWant] = useState(\"\")\n\n  const answerTypes = [\n    {\n      name: \"Pinyin\",\n      value: \"pinyin\"\n    },\n    {\n      name: \"Character\",\n      value: \"character\",\n    },\n    {\n      name: \"Definition\",\n      value: \"definition\"\n    }\n  ]\n\n  return (\n    <div style={{ width: \"100vw\", height: \"100vh\" }}>\n\n      <Stack style={{ width: \"100%\", height: \"100%\", justifyContent: \"center\", alignItems: \"center\" }}>\n        <Card body style={{ width: \"400px\" }}>\n          <Card.Title>\n            Mandarin Trainer\n          </Card.Title>\n          <Card.Body>\n            <Stack gap={3}>\n              <Form.Select aria-label=\"WordSet\">\n                <option>Word Set</option>\n                <option value=\"1\">Long Name of the Book 2-1 Chapter 3</option>\n                <option value=\"2\">Two</option>\n                <option value=\"3\">Three</option>\n              </Form.Select>\n              <Button>\n                Review Set\n              </Button>\n\n              <Stack direction=\"horizontal\" gap={3} style={{ justifyContent: \"space-between\", alignItems: \"center\" }}>\n\n                <Stack>\n                  \n                  <h5 style={{ textAlign: \"center\"}}>Given</h5>\n                  <ButtonGroup vertical>\n                    {answerTypes.map((radio, idx) => (\n                      <ToggleButton\n                        key={idx}\n                        id={`radio-${idx}`}\n                        type=\"radio\"\n                        name=\"radio\"\n                        value={radio.value}\n                        checked={given === radio.value}\n                        onChange={(e) => setGiven(e.currentTarget.value)}\n                      >\n                        {radio.name}\n                      </ToggleButton>\n                    ))}\n                  </ButtonGroup>\n                </Stack>\n\n                <Stack>\n                <h5 style={{ textAlign: \"center\"}}>Test for</h5>\n                  <ButtonGroup vertical>\n                    {answerTypes.map((radio, idx) => (\n                      <ToggleButton\n                        key={idx}\n                        id={`radio-${idx}`}\n                        type=\"radio\"\n                        name=\"radio\"\n                        value={radio.value}\n                        checked={want === radio.value}\n                        onChange={(e) => setWant(e.currentTarget.value)}\n                      >\n                        {radio.name}\n                      </ToggleButton>\n                    ))}\n                  </ButtonGroup>\n                </Stack>\n              </Stack>\n\n            </Stack>\n          </Card.Body>\n        </Card>\n      </Stack>\n\n\n\n\n\n\n\n      {/* <Container className=\"w-full h-full\">\n          <Row>\n            <Col xs=\"6\">\n              <Card>\n                <Card.Img />\n                <Card.Body>\n                  <Card.Title>\n                    Eric Website\n                  </Card.Title>\n                  <Card.Text>\n                    yeah you heard that\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col xs=\"6\">\n              <body>\n                Words here\n              </body>\n            </Col>\n          </Row>\n        </Container>\n        <Alert variant=\"secondary\">This button has been pressed {count} times</Alert>\n        <Button onClick={doThing}>Test Button 2</Button>\n        <body>the number is {isEven ? 'even' : 'not even'}</body> */}\n\n    </div >\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}