{"ast":null,"code":"var _jsxFileName = \"/Users/ericbennett/Desktop/ericlet/ericletapp/ericlet/src/components/Menu.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Menu(props) {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    body: true,\n    style: {\n      width: \"400px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n      children: \"Mandarin Trainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        gap: 3,\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          gap: 1,\n          children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n            \"aria-label\": \"WordSet\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Word Set\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"Long Name of the Book 2-1 Chapter 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"Two\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"Three\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Review Set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"horizontal\",\n          gap: 3,\n          style: {\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"Given\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              vertical: true,\n              children: answerTypes.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n                id: `given-${idx}`,\n                type: \"radio\",\n                name: \"given\",\n                value: radio.value,\n                checked: given === radio.value,\n                onChange: e => setGiven(e.currentTarget.value),\n                children: radio.name\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"Test for\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              vertical: true,\n              children: answerTypes.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n                id: `want-${idx}`,\n                type: \"radio\",\n                name: \"want\",\n                value: radio.value,\n                checked: want === radio.value,\n                onChange: e => setWant(e.currentTarget.value),\n                children: radio.name\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          children: \"GO!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["Menu","props","_jsxDEV","Card","body","style","width","children","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Stack","gap","Form","Select","value","Button","direction","justifyContent","alignItems","textAlign","ButtonGroup","vertical","answerTypes","map","radio","idx","ToggleButton","id","type","name","checked","given","onChange","e","setGiven","currentTarget","want","setWant","variant","_c","$RefreshReg$"],"sources":["/Users/ericbennett/Desktop/ericlet/ericletapp/ericlet/src/components/Menu.js"],"sourcesContent":["\nexport default function Menu(props) {\n\n    return (\n        <Card body style={{ width: \"400px\" }}>\n            <Card.Title>\n                Mandarin Trainer\n            </Card.Title>\n            <Card.Body>\n                <Stack gap={3}>\n\n                    <Stack gap={1}>\n                        <Form.Select aria-label=\"WordSet\">\n                            <option>Word Set</option>\n                            <option value=\"1\">Long Name of the Book 2-1 Chapter 3</option>\n                            <option value=\"2\">Two</option>\n                            <option value=\"3\">Three</option>\n                        </Form.Select>\n                        <Button>\n                            Review Set\n                        </Button>\n                    </Stack>\n\n                    <Stack direction=\"horizontal\" gap={3} style={{ justifyContent: \"space-between\", alignItems: \"center\" }}>\n\n                        <Stack>\n                            <h6 style={{ textAlign: \"center\" }}>Given</h6>\n                            <ButtonGroup vertical>\n                                {answerTypes.map((radio, idx) => (\n                                    <ToggleButton\n                                        key={idx}\n                                        id={`given-${idx}`}\n                                        type=\"radio\"\n                                        name=\"given\"\n                                        value={radio.value}\n                                        checked={given === radio.value}\n                                        onChange={(e) => setGiven(e.currentTarget.value)}\n                                    >\n                                        {radio.name}\n                                    </ToggleButton>\n                                ))}\n                            </ButtonGroup>\n                        </Stack>\n\n                        <Stack>\n                            <h6 style={{ textAlign: \"center\" }}>Test for</h6>\n                            <ButtonGroup vertical>\n                                {answerTypes.map((radio, idx) => (\n                                    <ToggleButton\n                                        key={idx}\n                                        id={`want-${idx}`}\n                                        type=\"radio\"\n                                        name=\"want\"\n                                        value={radio.value}\n                                        checked={want === radio.value}\n                                        onChange={(e) => setWant(e.currentTarget.value)}\n                                    >\n                                        {radio.name}\n                                    </ToggleButton>\n                                ))}\n                            </ButtonGroup>\n                        </Stack>\n\n                    </Stack>\n\n                    <Button variant=\"success\">\n                        GO!\n                    </Button>\n\n                </Stack>\n            </Card.Body>\n        </Card>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}